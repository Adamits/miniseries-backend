  [1m[36m (31.8ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.7ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (25.3ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.5ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (0.6ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (11.6ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (5.8ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (14.4ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (4.7ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (5.5ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:12)
  [1m[35m (21.2ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "user_id" integer, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.8ms)[0m  [1mCREATE  INDEX  "index_compositions_on_user_id_and_project_id" ON "compositions"  ("user_id", "project_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (5.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (14.5ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (2.2ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.2ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (11.5ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:9)
  [1m[35m (38.0ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.8ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[35m (6.1ms)[0m  BEGIN
  [1m[36m (19.0ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "composition_id" integer, "user_id" integer, "start" integer, "end" integer, "content" text, "taggable_id" integer, "taggable_type" character varying) [0m
  [1m[35m (0.9ms)[0m  CREATE  INDEX  "index_taggings_on_tag_id_and_composition_id_and_user_id" ON "taggings"  ("tag_id", "composition_id", "user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918154021"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.7ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'compositions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'projects'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'taggings'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'tags'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.2ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36mComposition Load (1.7ms)[0m  [1mSELECT "compositions".* FROM "compositions"[0m
  [1m[36m (2.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.1ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (27.1ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.8ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (0.7ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (5.9ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (13.5ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (5.2ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.2ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:11)
  [1m[35m (3.3ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_compositions_on_project_id" ON "compositions"  ("project_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (3.2ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (1.3ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.4ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:9)
  [1m[35m (2.0ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[35m (0.5ms)[0m  BEGIN
  [1m[36m (2.2ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "composition_id" integer, "user_id" integer, "start" integer, "end" integer, "content" text, "taggable_id" integer, "taggable_type" character varying) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_taggings_on_tag_id_and_composition_id_and_user_id" ON "taggings"  ("tag_id", "composition_id", "user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918154021"]]
  [1m[35m (0.2ms)[0m  COMMIT
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (2.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'compositions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.4ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'projects'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.4ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'taggings'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'tags'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.3ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.4ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36m (2.3ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (3.3ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (0.7ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (0.1ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (3.7ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.2ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:11)
  [1m[35m (2.2ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_compositions_on_project_id" ON "compositions"  ("project_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (2.6ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:9)
  [1m[35m (1.9ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.4ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (1.9ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "user_id" integer, "start" integer, "end" integer, "content" text, "taggable_id" integer, "taggable_type" character varying) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_taggings_on_tag_id_and_user_id" ON "taggings"  ("tag_id", "user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918154021"]]
  [1m[35m (0.2ms)[0m  COMMIT
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (2.5ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'compositions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'projects'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'taggings'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.5ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'tags'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (3.1ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.4ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36m (3.8ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (3.0ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.5ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (0.5ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (2.5ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:12)
  [1m[35m (2.4ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "user_id" integer, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_compositions_on_project_id_and_user_id" ON "compositions"  ("project_id", "user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (0.1ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (1.9ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.2ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:9)
  [1m[35m (2.2ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (1.9ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "user_id" integer, "start" integer, "end" integer, "content" text, "taggable_id" integer, "taggable_type" character varying) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_taggings_on_tag_id_and_user_id" ON "taggings"  ("tag_id", "user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918154021"]]
  [1m[35m (0.2ms)[0m  COMMIT
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (1.9ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'compositions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.2ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'projects'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'taggings'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.2ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'tags'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.2ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[36m (2.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.3ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (3.1ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (0.6ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (2.4ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:12)
  [1m[35m (2.1ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "user_id" integer, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_compositions_on_project_id_and_user_id" ON "compositions"  ("project_id", "user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (2.1ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:9)
  [1m[35m (2.1ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (5.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (3.8ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "user_id" integer, "start" integer, "end" integer, "content" text, "taggable_id" integer, "taggable_type" character varying) [0m
  [1m[35m (1.3ms)[0m  ROLLBACK
  [1m[36m (2.2ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (3.2ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (0.5ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (2.6ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.2ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:12)
  [1m[35m (2.9ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "user_id" integer, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_compositions_on_project_id_and_user_id" ON "compositions"  ("project_id", "user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (0.1ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (2.4ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:9)
  [1m[35m (1.9ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[36m (4.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (3.1ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.5ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (0.5ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (2.3ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:12)
  [1m[35m (2.0ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "user_id" integer, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.8ms)[0m  [1mCREATE  INDEX  "index_compositions_on_project_id_and_user_id" ON "compositions"  ("project_id", "user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (0.1ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (2.5ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:9)
  [1m[35m (2.3ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (1.8ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "user_id" integer, "start" integer, "end" integer, "content" text, "taggable_id" integer, "taggable_type" character varying) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_taggings_on_tag_id" ON "taggings"  ("tag_id")
  [1m[36m (0.7ms)[0m  [1mCREATE  INDEX  "index_taggings_on_taggable_id" ON "taggings"  ("taggable_id")[0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_taggings_on_taggable_type" ON "taggings"  ("taggable_type")
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_taggings_on_user_id" ON "taggings"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918154021"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (1.7ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'compositions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'projects'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.2ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'taggings'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'tags'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (2.5ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (2.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (4.3ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (3.0ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.5ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (0.5ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (2.2ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.2ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:12)
  [1m[35m (1.9ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "user_id" integer, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_compositions_on_project_id_and_user_id" ON "compositions"  ("project_id", "user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (0.1ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (2.5ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:9)
  [1m[35m (1.8ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (1.9ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "user_id" integer, "start" integer, "end" integer, "content" text, "taggable_id" integer, "taggable_type" character varying) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_taggings_on_tag_id" ON "taggings"  ("tag_id")
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_taggings_on_taggable_id" ON "taggings"  ("taggable_id")[0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_taggings_on_taggable_type" ON "taggings"  ("taggable_type")
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_taggings_on_user_id" ON "taggings"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918154021"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (1.7ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'compositions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.3ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'projects'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'taggings'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.5ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'tags'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (2.7ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.3ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (2.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (15.6ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (6.0ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (1.4ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (2.5ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.2ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:12)
  [1m[35m (2.1ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "user_id" integer, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_compositions_on_project_id_and_user_id" ON "compositions"  ("project_id", "user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (2.2ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.2ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:9)
  [1m[35m (1.8ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (1.8ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "user_id" integer, "start" integer, "end" integer, "content" text, "tagable_id" integer, "tagable_type" character varying) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_taggings_on_tag_id" ON "taggings"  ("tag_id")
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_taggings_on_tagable_id" ON "taggings"  ("tagable_id")[0m
  [1m[35m (0.8ms)[0m  CREATE  INDEX  "index_taggings_on_tagable_type" ON "taggings"  ("tagable_type")
  [1m[36m (0.7ms)[0m  [1mCREATE  INDEX  "index_taggings_on_user_id" ON "taggings"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918154021"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (1.7ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'compositions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.4ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'projects'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'taggings'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.4ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'tags'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.4ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.3ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36mComposition Load (1.2ms)[0m  [1mSELECT "compositions".* FROM "compositions" WHERE "compositions"."order" = $1[0m  [["order", 1]]
  [1m[35mComposition Load (0.2ms)[0m  SELECT  "compositions".* FROM "compositions" WHERE "compositions"."order" = $1  ORDER BY "compositions"."id" ASC LIMIT 1  [["order", 1]]
  [1m[36m (15.2ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (8.5ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (16.4ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (3.6ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (1.0ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (5.8ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (6.0ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (14.1ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (3.4ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:12)
  [1m[35m (2.7ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "user_id" integer, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_compositions_on_project_id_and_user_id" ON "compositions"  ("project_id", "user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (0.1ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (2.4ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:9)
  [1m[35m (2.5ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.8ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (2.6ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "user_id" integer, "start" integer, "end" integer, "content" text, "tagable_id" integer, "tagable_type" character varying) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_taggings_on_tag_id" ON "taggings"  ("tag_id")
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_taggings_on_tagable_id" ON "taggings"  ("tagable_id")[0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_taggings_on_tagable_type" ON "taggings"  ("tagable_type")
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_taggings_on_user_id" ON "taggings"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918154021"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (2.0ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'compositions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.4ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'projects'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'taggings'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.3ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'tags'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.2ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.3ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to AddCompositionCountToUsers (20180921174335)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (10.3ms)[0m  [1mALTER TABLE "users" ADD "composition_count" integer DEFAULT 0[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180921174335"]]
  [1m[36m (8.1ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.5ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (1.7ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'compositions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'projects'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'taggings'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.3ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'tags'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.2ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (2.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (3.0ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (0.5ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (0.1ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (2.6ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:12)
  [1m[35m (2.3ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "user_id" integer, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_compositions_on_project_id_and_user_id" ON "compositions"  ("project_id", "user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (6.0ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (19.0ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.4ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:9)
  [1m[35m (2.3ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (2.2ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "user_id" integer, "start" integer, "end" integer, "content" text, "tagable_id" integer, "tagable_type" character varying) [0m
  [1m[35m (3.7ms)[0m  CREATE  INDEX  "index_taggings_on_tag_id" ON "taggings"  ("tag_id")
  [1m[36m (3.4ms)[0m  [1mCREATE  INDEX  "index_taggings_on_tagable_id" ON "taggings"  ("tagable_id")[0m
  [1m[35m (1.1ms)[0m  CREATE  INDEX  "index_taggings_on_tagable_type" ON "taggings"  ("tagable_type")
  [1m[36m (0.8ms)[0m  [1mCREATE  INDEX  "index_taggings_on_user_id" ON "taggings"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918154021"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to AddCompositionCountToUsers (20180921174335)
  [1m[36m (4.3ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.8ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (4.1ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.4ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (0.5ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (1.9ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.2ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:12)
  [1m[35m (2.0ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "user_id" integer, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.7ms)[0m  [1mCREATE  INDEX  "index_compositions_on_project_id_and_user_id" ON "compositions"  ("project_id", "user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (0.1ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (2.4ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.2ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:9)
  [1m[35m (1.9ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (1.9ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "user_id" integer, "start" integer, "end" integer, "content" text, "tagable_id" integer, "tagable_type" character varying) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_taggings_on_tag_id" ON "taggings"  ("tag_id")
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_taggings_on_tagable_id" ON "taggings"  ("tagable_id")[0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_taggings_on_tagable_type" ON "taggings"  ("tagable_type")
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_taggings_on_user_id" ON "taggings"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918154021"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to AddCompositionsCountToUsers (20180921174335)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (2.6ms)[0m  [1mALTER TABLE "users" ADD "compositions_count" integer DEFAULT 0[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180921174335"]]
  [1m[36m (0.9ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (2.0ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'compositions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.3ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'projects'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.2ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'taggings'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'tags'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (9.3ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.2ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (3.2ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (0.6ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (2.3ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:12)
  [1m[35m (2.5ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "user_id" integer, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_compositions_on_project_id_and_user_id" ON "compositions"  ("project_id", "user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (2.7ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.2ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:9)
  [1m[35m (1.9ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.4ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[35m (0.1ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918154021_create_taggings.rb:11)
  [1m[36m (1.8ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "user_id" integer, "start" integer, "end" integer, "content" text, "tagable_id" integer, "tagable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_taggings_on_tag_id" ON "taggings"  ("tag_id")
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_taggings_on_tagable_id" ON "taggings"  ("tagable_id")[0m
  [1m[35m (0.4ms)[0m  CREATE  INDEX  "index_taggings_on_tagable_type" ON "taggings"  ("tagable_type")
  [1m[36m (0.5ms)[0m  [1mCREATE  INDEX  "index_taggings_on_user_id" ON "taggings"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918154021"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to AddCompositionsCountToUsers (20180921174335)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (3.3ms)[0m  [1mALTER TABLE "users" ADD "compositions_count" integer DEFAULT 0[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180921174335"]]
  [1m[36m (1.3ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (1.7ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'compositions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'projects'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.2ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'taggings'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.3ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'tags'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.2ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.9ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36mUser Load (2.8ms)[0m  [1mSELECT  "users".* FROM "users"  ORDER BY "users"."id" DESC LIMIT 1[0m
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36mUser Exists (2.6ms)[0m  [1mSELECT  1 AS one FROM "users" WHERE "users"."email" = 'ajwieme@gmail.com' LIMIT 1[0m
  [1m[35mSQL (2.4ms)[0m  INSERT INTO "users" ("email", "encrypted_password", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["email", "ajwieme@gmail.com"], ["encrypted_password", "$2a$11$pRbMQByY9bqMdQAhGGWitufeN4jd1X.XMKbKewQMuaC6SyhQIFS6y"], ["created_at", "2018-09-30 19:43:52.099812"], ["updated_at", "2018-09-30 19:43:52.099812"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mProject Exists (1.3ms)[0m  [1mSELECT  1 AS one FROM "projects" WHERE ("projects"."title" = 'test project' AND "projects"."user_id" = 1) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "projects" ("title", "user_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"  [["title", "test project"], ["user_id", 1], ["created_at", "2018-09-30 19:44:12.682925"], ["updated_at", "2018-09-30 19:44:12.682925"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mComposition Exists (1.7ms)[0m  [1mSELECT  1 AS one FROM "compositions" WHERE ("compositions"."title" = 'first comp' AND "compositions"."project_id" = 1) LIMIT 1[0m
  [1m[35mSQL (0.6ms)[0m  INSERT INTO "compositions" ("title", "content", "project_id", "user_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"  [["title", "first comp"], ["content", "test content"], ["project_id", 1], ["user_id", 1], ["created_at", "2018-09-30 19:44:29.110658"], ["updated_at", "2018-09-30 19:44:29.110658"]]
  [1m[36mSQL (0.2ms)[0m  [1mUPDATE "users" SET "compositions_count" = COALESCE("compositions_count", 0) + 1 WHERE "users"."id" = $1[0m  [["id", 1]]
  [1m[35mSQL (0.1ms)[0m  UPDATE "projects" SET "compositions_count" = COALESCE("compositions_count", 0) + 1 WHERE "projects"."id" = $1  [["id", 1]]
  [1m[36m (1.6ms)[0m  [1mSELECT MAX("compositions"."order") FROM "compositions"[0m
  [1m[35mComposition Exists (0.2ms)[0m  SELECT  1 AS one FROM "compositions" WHERE ("compositions"."title" = 'first comp' AND "compositions"."id" != 1 AND "compositions"."project_id" = 1) LIMIT 1
  [1m[36mSQL (0.2ms)[0m  [1mUPDATE "compositions" SET "title" = $1, "content" = $2, "project_id" = $3, "user_id" = $4, "created_at" = $5, "updated_at" = $6, "id" = $7, "order" = $8 WHERE "compositions"."id" = $9[0m  [["title", "first comp"], ["content", "test content"], ["project_id", 1], ["user_id", 1], ["created_at", "2018-09-30 19:44:29.110658"], ["updated_at", "2018-09-30 19:44:29.110658"], ["id", 1], ["order", 0], ["id", 1]]
  [1m[35mSQL (0.1ms)[0m  UPDATE "projects" SET "compositions_count" = COALESCE("compositions_count", 0) + 1 WHERE "projects"."id" = $1  [["id", 1]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35mComposition Load (0.5ms)[0m  SELECT  "compositions".* FROM "compositions"  ORDER BY "compositions"."id" DESC LIMIT 1
  [1m[36m (1.1ms)[0m  [1mSELECT COUNT(*) FROM "votes" WHERE "votes"."user_id" = $1 AND "votes"."votable_type" = 'Composition' AND "votes"."votable_id" = 1[0m  [["user_id", 1]]
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mSQL (0.6ms)[0m  [1mINSERT INTO "votes" ("type", "user_id", "votable_id", "votable_type", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5, $6) RETURNING "id"[0m  [["type", "Vote::Negative"], ["user_id", 1], ["votable_id", 1], ["votable_type", "Composition"], ["created_at", "2018-09-30 19:46:07.960336"], ["updated_at", "2018-09-30 19:46:07.960336"]]
  [1m[35m (0.2ms)[0m  COMMIT
  [1m[36m (0.4ms)[0m  [1mSELECT COUNT(*) FROM "votes" WHERE "votes"."user_id" = $1 AND "votes"."votable_type" = 'Composition' AND "votes"."votable_id" = 1[0m  [["user_id", 1]]
  [1m[35mVote Load (0.3ms)[0m  SELECT "votes".* FROM "votes" WHERE "votes"."votable_id" = $1 AND "votes"."votable_type" = $2 AND "votes"."type" = $3  [["votable_id", 1], ["votable_type", "Composition"], ["type", "Vote::Positive"]]
  [1m[36mVote Load (0.2ms)[0m  [1mSELECT "votes".* FROM "votes" WHERE "votes"."votable_id" = $1 AND "votes"."votable_type" = $2[0m  [["votable_id", 1], ["votable_type", "Composition"]]
  [1m[35mVote Load (0.3ms)[0m  SELECT "votes".* FROM "votes" WHERE "votes"."user_id" = $1  [["user_id", 1]]
  [1m[36mVote Load (0.3ms)[0m  [1mSELECT "votes".* FROM "votes" WHERE "votes"."votable_id" = $1 AND "votes"."votable_type" = $2 AND "votes"."type" = $3[0m  [["votable_id", 1], ["votable_type", "Composition"], ["type", "Vote::Negative"]]
  [1m[35m (0.4ms)[0m  SELECT COUNT(*) FROM "votes" WHERE "votes"."votable_id" = $1 AND "votes"."votable_type" = $2 AND "votes"."type" = $3  [["votable_id", 1], ["votable_type", "Composition"], ["type", "Vote::Negative"]]
  [1m[36m (4.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.0ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to DeviseCreateUsers (20180918151937)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (4.3ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "email" character varying DEFAULT '' NOT NULL, "encrypted_password" character varying DEFAULT '' NOT NULL, "reset_password_token" character varying, "reset_password_sent_at" timestamp, "remember_created_at" timestamp, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE UNIQUE INDEX  "index_users_on_email" ON "users"  ("email")
  [1m[36m (0.6ms)[0m  [1mCREATE UNIQUE INDEX  "index_users_on_reset_password_token" ON "users"  ("reset_password_token")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918151937"]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m
Migrating to CreateProjects (20180918152156)
  [1m[35m (0.3ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152156_create_projects.rb:9)
  [1m[36m (2.6ms)[0m  [1mCREATE TABLE "projects" ("id" serial primary key, "user_id" integer, "title" character varying, "description" text, "published" boolean DEFAULT 'false', "compositions_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_projects_on_user_id" ON "projects"  ("user_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152156"]]
  [1m[35m (0.3ms)[0m  COMMIT
Migrating to CreateCompositions (20180918152318)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152318_create_compositions.rb:12)
  [1m[35m (2.2ms)[0m  CREATE TABLE "compositions" ("id" serial primary key, "user_id" integer, "project_id" integer, "title" character varying, "description" character varying, "content" text, "published" boolean DEFAULT 'false', "order" integer, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.7ms)[0m  [1mCREATE  INDEX  "index_compositions_on_project_id_and_user_id" ON "compositions"  ("project_id", "user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918152318"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
Migrating to CreateVotes (20180918152511)
  [1m[35m (0.2ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918152511_create_votes.rb:9)
  [1m[36m (2.7ms)[0m  [1mCREATE TABLE "votes" ("id" serial primary key, "user_id" integer, "type" character varying, "name" character varying, "votable_id" integer, "votable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_votes_on_user_id_and_votable_id" ON "votes"  ("user_id", "votable_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES ($1)[0m  [["version", "20180918152511"]]
  [1m[35m (0.2ms)[0m  COMMIT
Migrating to CreateTags (20180918153116)
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918153116_create_tags.rb:8)
  [1m[35m (2.0ms)[0m  CREATE TABLE "tags" ("id" serial primary key, "user_id" integer, "name" character varying, "description" text, "taggings_count" integer DEFAULT 0, "created_at" timestamp, "updated_at" timestamp) 
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_tags_on_user_id" ON "tags"  ("user_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918153116"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
Migrating to CreateTaggings (20180918154021)
  [1m[35m (0.1ms)[0m  BEGIN
DEPRECATION WARNING: `#timestamps` was called without specifying an option for `null`. In Rails 5, this behavior will change to `null: false`. You should manually specify `null: true` to prevent the behavior of your existing migrations from changing. (called from block in change at /Users/ajwieme/miniseries-backend/db/migrate/20180918154021_create_taggings.rb:11)
  [1m[36m (2.0ms)[0m  [1mCREATE TABLE "taggings" ("id" serial primary key, "tag_id" integer, "user_id" integer, "start" integer, "end" integer, "content" text, "tagable_id" integer, "tagable_type" character varying, "created_at" timestamp, "updated_at" timestamp) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_taggings_on_tag_id" ON "taggings"  ("tag_id")
  [1m[36m (0.4ms)[0m  [1mCREATE  INDEX  "index_taggings_on_tagable_id" ON "taggings"  ("tagable_id")[0m
  [1m[35m (0.4ms)[0m  CREATE  INDEX  "index_taggings_on_tagable_type" ON "taggings"  ("tagable_type")
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_taggings_on_user_id" ON "taggings"  ("user_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180918154021"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
Migrating to AddCompositionsCountToUsers (20180921174335)
  [1m[35m (0.2ms)[0m  BEGIN
  [1m[36m (3.5ms)[0m  [1mALTER TABLE "users" ADD "compositions_count" integer DEFAULT 0[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20180921174335"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (1.6ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'compositions'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'projects'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.2ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'taggings'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'tags'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (1.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.3ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'votes'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname



Started GET "/" for ::1 at 2018-09-30 18:40:57 -0400
  [1m[36mActiveRecord::SchemaMigration Load (0.4ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Processing by Rails::WelcomeController#index as HTML
  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/railties-4.2.5/lib/rails/templates/rails/welcome/index.html.erb (1.6ms)
Completed 200 OK in 14ms (Views: 13.6ms | ActiveRecord: 0.0ms)


Started GET "/v1/projects" for ::1 at 2018-09-30 18:41:03 -0400
Processing by V1::ProjectsController#index as HTML
Completed 401 Unauthorized in 14ms (ActiveRecord: 0.0ms)


Started GET "/v1/users/sign_in" for ::1 at 2018-09-30 18:41:03 -0400

ActionController::RoutingError (uninitialized constant V1::SessionsController):
  activesupport (4.2.5) lib/active_support/inflector/methods.rb:263:in `const_get'
  activesupport (4.2.5) lib/active_support/inflector/methods.rb:263:in `block in constantize'
  activesupport (4.2.5) lib/active_support/inflector/methods.rb:259:in `each'
  activesupport (4.2.5) lib/active_support/inflector/methods.rb:259:in `inject'
  activesupport (4.2.5) lib/active_support/inflector/methods.rb:259:in `constantize'
  actionpack (4.2.5) lib/action_dispatch/routing/route_set.rb:72:in `controller_reference'
  actionpack (4.2.5) lib/action_dispatch/routing/route_set.rb:62:in `controller'
  actionpack (4.2.5) lib/action_dispatch/routing/route_set.rb:41:in `serve'
  actionpack (4.2.5) lib/action_dispatch/routing/mapper.rb:49:in `serve'
  actionpack (4.2.5) lib/action_dispatch/journey/router.rb:43:in `block in serve'
  actionpack (4.2.5) lib/action_dispatch/journey/router.rb:30:in `each'
  actionpack (4.2.5) lib/action_dispatch/journey/router.rb:30:in `serve'
  actionpack (4.2.5) lib/action_dispatch/routing/route_set.rb:817:in `call'
  warden (1.2.7) lib/warden/manager.rb:36:in `block in call'
  warden (1.2.7) lib/warden/manager.rb:35:in `catch'
  warden (1.2.7) lib/warden/manager.rb:35:in `call'
  rack (1.6.10) lib/rack/etag.rb:24:in `call'
  rack (1.6.10) lib/rack/conditionalget.rb:25:in `call'
  rack (1.6.10) lib/rack/head.rb:13:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/params_parser.rb:27:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/flash.rb:260:in `call'
  rack (1.6.10) lib/rack/session/abstract/id.rb:225:in `context'
  rack (1.6.10) lib/rack/session/abstract/id.rb:220:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/cookies.rb:560:in `call'
  activerecord (4.2.5) lib/active_record/query_cache.rb:36:in `call'
  activerecord (4.2.5) lib/active_record/connection_adapters/abstract/connection_pool.rb:653:in `call'
  activerecord (4.2.5) lib/active_record/migration.rb:377:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/callbacks.rb:29:in `block in call'
  activesupport (4.2.5) lib/active_support/callbacks.rb:88:in `__run_callbacks__'
  activesupport (4.2.5) lib/active_support/callbacks.rb:778:in `_run_call_callbacks'
  activesupport (4.2.5) lib/active_support/callbacks.rb:81:in `run_callbacks'
  actionpack (4.2.5) lib/action_dispatch/middleware/callbacks.rb:27:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/reloader.rb:73:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/remote_ip.rb:78:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/debug_exceptions.rb:17:in `call'
  web-console (2.3.0) lib/web_console/middleware.rb:28:in `block in call'
  web-console (2.3.0) lib/web_console/middleware.rb:18:in `catch'
  web-console (2.3.0) lib/web_console/middleware.rb:18:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  railties (4.2.5) lib/rails/rack/logger.rb:38:in `call_app'
  railties (4.2.5) lib/rails/rack/logger.rb:20:in `block in call'
  activesupport (4.2.5) lib/active_support/tagged_logging.rb:68:in `block in tagged'
  activesupport (4.2.5) lib/active_support/tagged_logging.rb:26:in `tagged'
  activesupport (4.2.5) lib/active_support/tagged_logging.rb:68:in `tagged'
  railties (4.2.5) lib/rails/rack/logger.rb:20:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/request_id.rb:21:in `call'
  rack (1.6.10) lib/rack/methodoverride.rb:22:in `call'
  rack (1.6.10) lib/rack/runtime.rb:18:in `call'
  activesupport (4.2.5) lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
  rack (1.6.10) lib/rack/lock.rb:17:in `call'
  actionpack (4.2.5) lib/action_dispatch/middleware/static.rb:116:in `call'
  rack (1.6.10) lib/rack/sendfile.rb:113:in `call'
  railties (4.2.5) lib/rails/engine.rb:518:in `call'
  railties (4.2.5) lib/rails/application.rb:165:in `call'
  rack (1.6.10) lib/rack/lock.rb:17:in `call'
  rack (1.6.10) lib/rack/content_length.rb:15:in `call'
  rack (1.6.10) lib/rack/handler/webrick.rb:88:in `service'
  /Users/ajwieme/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/webrick/httpserver.rb:138:in `service'
  /Users/ajwieme/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/webrick/httpserver.rb:94:in `run'
  /Users/ajwieme/.rvm/rubies/ruby-2.2.3/lib/ruby/2.2.0/webrick/server.rb:294:in `block in start_thread'


  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/_trace.html.erb (2.8ms)
  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/routes/_route.html.erb (3.0ms)
  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/routes/_table.html.erb (13.2ms)
  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/_request_and_response.html.erb (1.8ms)
  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/actionpack-4.2.5/lib/action_dispatch/middleware/templates/rescues/routing_error.html.erb within rescues/layout (94.3ms)
  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/web-console-2.3.0/lib/web_console/templates/_markup.html.erb (0.5ms)
  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/web-console-2.3.0/lib/web_console/templates/_inner_console_markup.html.erb within layouts/inlined_string (0.8ms)
  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/web-console-2.3.0/lib/web_console/templates/_prompt_box_markup.html.erb within layouts/inlined_string (0.2ms)
  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/web-console-2.3.0/lib/web_console/templates/style.css.erb within layouts/inlined_string (0.3ms)
  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/web-console-2.3.0/lib/web_console/templates/console.js.erb within layouts/javascript (37.4ms)
  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/web-console-2.3.0/lib/web_console/templates/main.js.erb within layouts/javascript (0.3ms)
  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/web-console-2.3.0/lib/web_console/templates/error_page.js.erb within layouts/javascript (0.5ms)
  Rendered /Users/ajwieme/.rvm/gems/ruby-2.2.3/gems/web-console-2.3.0/lib/web_console/templates/index.html.erb (81.2ms)
  [1m[36mProject Load (1.5ms)[0m  [1mSELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT 1[0m  [["id", 1]]
  [1m[35mProject Load (0.3ms)[0m  SELECT  "projects".* FROM "projects" WHERE "projects"."id" = $1 LIMIT 1  [["id", 1]]
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (4.3ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."email" = 'ajwieme@gmail.com' LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "users" ("email", "encrypted_password", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["email", "ajwieme@gmail.com"], ["encrypted_password", "$2a$11$Ko6hV2.F2jnNt9Tyl1eZreh3yNH.Nec/p6VbeZwWqrKmXCcD9atZq"], ["created_at", "2018-10-06 00:52:41.828459"], ["updated_at", "2018-10-06 00:52:41.828459"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mProject Exists (0.5ms)[0m  SELECT  1 AS one FROM "projects" WHERE ("projects"."title" = 'test project' AND "projects"."user_id" = 1) LIMIT 1
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "projects" ("title", "user_id", "created_at", "updated_at") VALUES ($1, $2, $3, $4) RETURNING "id"[0m  [["title", "test project"], ["user_id", 1], ["created_at", "2018-10-06 00:53:03.321900"], ["updated_at", "2018-10-06 00:53:03.321900"]]
  [1m[35m (1.9ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (27.5ms)[0m  INSERT INTO "votes" ("created_at", "updated_at") VALUES ($1, $2) RETURNING "id"  [["created_at", "2018-10-19 01:10:44.950904"], ["updated_at", "2018-10-19 01:10:44.950904"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[35mVote Load (3.3ms)[0m  SELECT  "votes".* FROM "votes"  ORDER BY "votes"."id" DESC LIMIT 1
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35m (0.2ms)[0m  ROLLBACK
